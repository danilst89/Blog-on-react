[{"E:\\All project in leason\\myBlog\\blog\\src\\App.js":"1","E:\\All project in leason\\myBlog\\blog\\src\\ui\\Header\\Header.js":"2","E:\\All project in leason\\myBlog\\blog\\src\\components\\Blog\\Blog.js":"3","E:\\All project in leason\\myBlog\\blog\\src\\index.js":"4","E:\\All project in leason\\myBlog\\blog\\src\\components\\Home\\Home.js":"5","E:\\All project in leason\\myBlog\\blog\\src\\components\\PostNew\\PostNew.js":"6","E:\\All project in leason\\myBlog\\blog\\src\\components\\Search\\Search.js":"7","E:\\All project in leason\\myBlog\\blog\\src\\components\\SignIn\\SignIn.js":"8"},{"size":5365,"mtime":1612256763898,"results":"9","hashOfConfig":"10"},{"size":495,"mtime":1612255365355,"results":"11","hashOfConfig":"10"},{"size":3423,"mtime":1612256995339,"results":"12","hashOfConfig":"10"},{"size":337,"mtime":1611679545281,"results":"13","hashOfConfig":"10"},{"size":517,"mtime":1611853659969,"results":"14","hashOfConfig":"10"},{"size":1271,"mtime":1612256995551,"results":"15","hashOfConfig":"10"},{"size":297,"mtime":1612151999357,"results":"16","hashOfConfig":"10"},{"size":3739,"mtime":1612448142238,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xoyai5",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\All project in leason\\myBlog\\blog\\src\\App.js",[],"E:\\All project in leason\\myBlog\\blog\\src\\ui\\Header\\Header.js",[],"E:\\All project in leason\\myBlog\\blog\\src\\components\\Blog\\Blog.js",["36","37","38"],"import React from 'react';\r\nimport './Blog.css';\r\nimport PostNew from \"../PostNew/PostNew\";\r\nimport Search from \"../Search/Search\";\r\n\r\nexport default class Blog extends React.Component {\r\n    state = {\r\n        searchValue: ''\r\n    }\r\n\r\n    changeSearchState = (e) => {\r\n        this.setState({\r\n            searchValue: e.target.value\r\n        })\r\n    };\r\n\r\n    searchInPosts = (search) => {\r\n        if (search.length === 0) {\r\n            return this.props.articles;\r\n        }\r\n\r\n        return this.props.articles.filter((item) => {\r\n            return item.title.toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n        });\r\n    };\r\n\r\n    filterPost = (items, filter) => {\r\n        if (filter === 'all') {\r\n            return items;\r\n        } else if (filter === 'liked') {\r\n            if (items.filter(item => item.liked).length !== 0) {\r\n                return items.filter(item => item.liked);\r\n            } else {\r\n                return <h1>Что бы увидеть здесь что-то добавтье пост в понравившиеся</h1>\r\n            }\r\n        } else if (filter === 'important') {\r\n            if (items.filter(item => item.important).length !== 0) {\r\n                return items.filter(item => item.important);\r\n            } else {\r\n                return <h1>Что бы увидеть здесь что-то добавтье пост в избранное</h1>\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const texts = this.filterPost(this.searchInPosts(this.state.searchValue), this.props.filter);\r\n        return (\r\n            <div className={'Blog'}>\r\n                <div className=\"typeFilter\">\r\n                    <div className=\"Filter\">\r\n                        <a onClick={(e) => this.props.sortByAll(e)} href={'#'}>Все посты</a>\r\n                        <a onClick={(e) => this.props.sortByLiked(e)} href={'#'}>Понравившиеся</a>\r\n                        <a onClick={(e) => this.props.sortByImportant(e)} href={'#'}>Избранное</a>\r\n                    </div>\r\n                    <div className=\"Search\">\r\n                        <Search stateValue={this.state.searchValue} changeState={this.changeSearchState} searchPost={this.searchInPosts} allPosts={this.props.articles}/>\r\n                    </div>\r\n                </div>\r\n                {Array.isArray(texts) ? texts.map((blog, index) => {\r\n                    return (\r\n                        <div key={index}>\r\n                            <div className={'flex'}>\r\n                                <h2>{blog.title}</h2>\r\n                                <div className=\"flexComponent\">\r\n                                    <i style={blog.important ? {'color': '#fde910'} : {'color' : '#706969'}} onClick={() => this.props.doImportant(index)} className=\"fas fa-bookmark\"/>\r\n                                    <i style={blog.liked ? {'color': 'red'} : {'color' : '#706969'}} onClick={() => this.props.like(index)} className=\"fas fa-heart\"/>\r\n                                    <i onClick={() => this.props.onDelete(index)} className=\"fa fa-trash\"/>\r\n                                </div>\r\n                            </div>\r\n                            <p>{blog.text}</p>\r\n                        </div>\r\n                    )\r\n                }) : texts}\r\n                <PostNew addText={this.props.addText}/>\r\n            </div>\r\n        )\r\n    }\r\n}",["39","40"],"E:\\All project in leason\\myBlog\\blog\\src\\index.js",[],"E:\\All project in leason\\myBlog\\blog\\src\\components\\Home\\Home.js",[],"E:\\All project in leason\\myBlog\\blog\\src\\components\\PostNew\\PostNew.js",[],"E:\\All project in leason\\myBlog\\blog\\src\\components\\Search\\Search.js",[],"E:\\All project in leason\\myBlog\\blog\\src\\components\\SignIn\\SignIn.js",[],{"ruleId":"41","severity":1,"message":"42","line":51,"column":25,"nodeType":"43","endLine":51,"endColumn":80},{"ruleId":"41","severity":1,"message":"42","line":52,"column":25,"nodeType":"43","endLine":52,"endColumn":82},{"ruleId":"41","severity":1,"message":"42","line":53,"column":25,"nodeType":"43","endLine":53,"endColumn":86},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-global-assign","no-unsafe-negation"]